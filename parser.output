Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: instruction
    5     | labels instruction

    6 $@1: ε

    7 labels: labels LABEL $@1 COLON

    8 $@2: ε

    9 labels: LABEL $@2 COLON

   10 instruction: rtype_instruction
   11            | itype_instruction
   12            | stype_instruction
   13            | jtype_instruction
   14            | push_instruction
   15            | pop_instruction

   16 $@3: ε

   17 rtype_instruction: ADD $@3 rtype_params

   18 $@4: ε

   19 rtype_instruction: SUB $@4 rtype_params

   20 $@5: ε

   21 rtype_instruction: AND $@5 rtype_params

   22 $@6: ε

   23 rtype_instruction: OR $@6 rtype_params

   24 $@7: ε

   25 rtype_instruction: NOR $@7 rtype_params

   26 rtype_params: REGISTER COMMA REGISTER COMMA REGISTER

   27 $@8: ε

   28 itype_instruction: ADDI $@8 itype_params

   29 $@9: ε

   30 itype_instruction: SUBI $@9 itype_params

   31 $@10: ε

   32 itype_instruction: ANDI $@10 itype_params

   33 $@11: ε

   34 itype_instruction: ORI $@11 itype_params

   35 $@12: ε

   36 itype_instruction: BEQ $@12 branch_params

   37 $@13: ε

   38 itype_instruction: BNEQ $@13 branch_params

   39 $@14: ε

   40 itype_instruction: LW $@14 memory_params

   41 $@15: ε

   42 itype_instruction: SW $@15 memory_params

   43 itype_params: REGISTER COMMA REGISTER COMMA INT

   44 branch_params: REGISTER COMMA REGISTER COMMA LABEL

   45 memory_params: REGISTER COMMA INT LPAREN REGISTER RPAREN

   46 $@16: ε

   47 stype_instruction: SLL $@16 itype_params

   48 $@17: ε

   49 stype_instruction: SRL $@17 itype_params

   50 $@18: ε

   51 jtype_instruction: J $@18 LABEL

   52 push_instruction: PUSH REGISTER
   53                 | PUSH INT LPAREN REGISTER RPAREN

   54 pop_instruction: POP REGISTER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD (258) 17
    ADDI (259) 28
    SUB (260) 19
    SUBI (261) 30
    AND (262) 21
    ANDI (263) 32
    OR (264) 23
    ORI (265) 34
    SLL (266) 47
    SRL (267) 49
    NOR (268) 25
    SW (269) 42
    LW (270) 40
    BEQ (271) 36
    BNEQ (272) 38
    J (273) 51
    REGISTER (274) 26 43 44 45 52 53 54
    COMMA (275) 26 43 44 45
    COLON (276) 7 9
    LPAREN (277) 45 53
    RPAREN (278) 45 53
    LABEL (279) 7 9 44 51
    INT (280) 43 45 53
    PUSH (281) 52 53
    POP (282) 54


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    start (29)
        on left: 1
        on right: 0
    program (30)
        on left: 2 3
        on right: 1 2
    unit (31)
        on left: 4 5
        on right: 2 3
    labels (32)
        on left: 7 9
        on right: 5 7
    $@1 (33)
        on left: 6
        on right: 7
    $@2 (34)
        on left: 8
        on right: 9
    instruction (35)
        on left: 10 11 12 13 14 15
        on right: 4 5
    rtype_instruction (36)
        on left: 17 19 21 23 25
        on right: 10
    $@3 (37)
        on left: 16
        on right: 17
    $@4 (38)
        on left: 18
        on right: 19
    $@5 (39)
        on left: 20
        on right: 21
    $@6 (40)
        on left: 22
        on right: 23
    $@7 (41)
        on left: 24
        on right: 25
    rtype_params (42)
        on left: 26
        on right: 17 19 21 23 25
    itype_instruction (43)
        on left: 28 30 32 34 36 38 40 42
        on right: 11
    $@8 (44)
        on left: 27
        on right: 28
    $@9 (45)
        on left: 29
        on right: 30
    $@10 (46)
        on left: 31
        on right: 32
    $@11 (47)
        on left: 33
        on right: 34
    $@12 (48)
        on left: 35
        on right: 36
    $@13 (49)
        on left: 37
        on right: 38
    $@14 (50)
        on left: 39
        on right: 40
    $@15 (51)
        on left: 41
        on right: 42
    itype_params (52)
        on left: 43
        on right: 28 30 32 34 47 49
    branch_params (53)
        on left: 44
        on right: 36 38
    memory_params (54)
        on left: 45
        on right: 40 42
    stype_instruction (55)
        on left: 47 49
        on right: 12
    $@16 (56)
        on left: 46
        on right: 47
    $@17 (57)
        on left: 48
        on right: 49
    jtype_instruction (58)
        on left: 51
        on right: 13
    $@18 (59)
        on left: 50
        on right: 51
    push_instruction (60)
        on left: 52 53
        on right: 14
    pop_instruction (61)
        on left: 54
        on right: 15


State 0

    0 $accept: • start $end

    ADD    shift, and go to state 1
    ADDI   shift, and go to state 2
    SUB    shift, and go to state 3
    SUBI   shift, and go to state 4
    AND    shift, and go to state 5
    ANDI   shift, and go to state 6
    OR     shift, and go to state 7
    ORI    shift, and go to state 8
    SLL    shift, and go to state 9
    SRL    shift, and go to state 10
    NOR    shift, and go to state 11
    SW     shift, and go to state 12
    LW     shift, and go to state 13
    BEQ    shift, and go to state 14
    BNEQ   shift, and go to state 15
    J      shift, and go to state 16
    LABEL  shift, and go to state 17
    PUSH   shift, and go to state 18
    POP    shift, and go to state 19

    start              go to state 20
    program            go to state 21
    unit               go to state 22
    labels             go to state 23
    instruction        go to state 24
    rtype_instruction  go to state 25
    itype_instruction  go to state 26
    stype_instruction  go to state 27
    jtype_instruction  go to state 28
    push_instruction   go to state 29
    pop_instruction    go to state 30


State 1

   17 rtype_instruction: ADD • $@3 rtype_params

    $default  reduce using rule 16 ($@3)

    $@3  go to state 31


State 2

   28 itype_instruction: ADDI • $@8 itype_params

    $default  reduce using rule 27 ($@8)

    $@8  go to state 32


State 3

   19 rtype_instruction: SUB • $@4 rtype_params

    $default  reduce using rule 18 ($@4)

    $@4  go to state 33


State 4

   30 itype_instruction: SUBI • $@9 itype_params

    $default  reduce using rule 29 ($@9)

    $@9  go to state 34


State 5

   21 rtype_instruction: AND • $@5 rtype_params

    $default  reduce using rule 20 ($@5)

    $@5  go to state 35


State 6

   32 itype_instruction: ANDI • $@10 itype_params

    $default  reduce using rule 31 ($@10)

    $@10  go to state 36


State 7

   23 rtype_instruction: OR • $@6 rtype_params

    $default  reduce using rule 22 ($@6)

    $@6  go to state 37


State 8

   34 itype_instruction: ORI • $@11 itype_params

    $default  reduce using rule 33 ($@11)

    $@11  go to state 38


State 9

   47 stype_instruction: SLL • $@16 itype_params

    $default  reduce using rule 46 ($@16)

    $@16  go to state 39


State 10

   49 stype_instruction: SRL • $@17 itype_params

    $default  reduce using rule 48 ($@17)

    $@17  go to state 40


State 11

   25 rtype_instruction: NOR • $@7 rtype_params

    $default  reduce using rule 24 ($@7)

    $@7  go to state 41


State 12

   42 itype_instruction: SW • $@15 memory_params

    $default  reduce using rule 41 ($@15)

    $@15  go to state 42


State 13

   40 itype_instruction: LW • $@14 memory_params

    $default  reduce using rule 39 ($@14)

    $@14  go to state 43


State 14

   36 itype_instruction: BEQ • $@12 branch_params

    $default  reduce using rule 35 ($@12)

    $@12  go to state 44


State 15

   38 itype_instruction: BNEQ • $@13 branch_params

    $default  reduce using rule 37 ($@13)

    $@13  go to state 45


State 16

   51 jtype_instruction: J • $@18 LABEL

    $default  reduce using rule 50 ($@18)

    $@18  go to state 46


State 17

    9 labels: LABEL • $@2 COLON

    $default  reduce using rule 8 ($@2)

    $@2  go to state 47


State 18

   52 push_instruction: PUSH • REGISTER
   53                 | PUSH • INT LPAREN REGISTER RPAREN

    REGISTER  shift, and go to state 48
    INT       shift, and go to state 49


State 19

   54 pop_instruction: POP • REGISTER

    REGISTER  shift, and go to state 50


State 20

    0 $accept: start • $end

    $end  shift, and go to state 51


State 21

    1 start: program •
    2 program: program • unit

    ADD    shift, and go to state 1
    ADDI   shift, and go to state 2
    SUB    shift, and go to state 3
    SUBI   shift, and go to state 4
    AND    shift, and go to state 5
    ANDI   shift, and go to state 6
    OR     shift, and go to state 7
    ORI    shift, and go to state 8
    SLL    shift, and go to state 9
    SRL    shift, and go to state 10
    NOR    shift, and go to state 11
    SW     shift, and go to state 12
    LW     shift, and go to state 13
    BEQ    shift, and go to state 14
    BNEQ   shift, and go to state 15
    J      shift, and go to state 16
    LABEL  shift, and go to state 17
    PUSH   shift, and go to state 18
    POP    shift, and go to state 19

    $default  reduce using rule 1 (start)

    unit               go to state 52
    labels             go to state 23
    instruction        go to state 24
    rtype_instruction  go to state 25
    itype_instruction  go to state 26
    stype_instruction  go to state 27
    jtype_instruction  go to state 28
    push_instruction   go to state 29
    pop_instruction    go to state 30


State 22

    3 program: unit •

    $default  reduce using rule 3 (program)


State 23

    5 unit: labels • instruction
    7 labels: labels • LABEL $@1 COLON

    ADD    shift, and go to state 1
    ADDI   shift, and go to state 2
    SUB    shift, and go to state 3
    SUBI   shift, and go to state 4
    AND    shift, and go to state 5
    ANDI   shift, and go to state 6
    OR     shift, and go to state 7
    ORI    shift, and go to state 8
    SLL    shift, and go to state 9
    SRL    shift, and go to state 10
    NOR    shift, and go to state 11
    SW     shift, and go to state 12
    LW     shift, and go to state 13
    BEQ    shift, and go to state 14
    BNEQ   shift, and go to state 15
    J      shift, and go to state 16
    LABEL  shift, and go to state 53
    PUSH   shift, and go to state 18
    POP    shift, and go to state 19

    instruction        go to state 54
    rtype_instruction  go to state 25
    itype_instruction  go to state 26
    stype_instruction  go to state 27
    jtype_instruction  go to state 28
    push_instruction   go to state 29
    pop_instruction    go to state 30


State 24

    4 unit: instruction •

    $default  reduce using rule 4 (unit)


State 25

   10 instruction: rtype_instruction •

    $default  reduce using rule 10 (instruction)


State 26

   11 instruction: itype_instruction •

    $default  reduce using rule 11 (instruction)


State 27

   12 instruction: stype_instruction •

    $default  reduce using rule 12 (instruction)


State 28

   13 instruction: jtype_instruction •

    $default  reduce using rule 13 (instruction)


State 29

   14 instruction: push_instruction •

    $default  reduce using rule 14 (instruction)


State 30

   15 instruction: pop_instruction •

    $default  reduce using rule 15 (instruction)


State 31

   17 rtype_instruction: ADD $@3 • rtype_params

    REGISTER  shift, and go to state 55

    rtype_params  go to state 56


State 32

   28 itype_instruction: ADDI $@8 • itype_params

    REGISTER  shift, and go to state 57

    itype_params  go to state 58


State 33

   19 rtype_instruction: SUB $@4 • rtype_params

    REGISTER  shift, and go to state 55

    rtype_params  go to state 59


State 34

   30 itype_instruction: SUBI $@9 • itype_params

    REGISTER  shift, and go to state 57

    itype_params  go to state 60


State 35

   21 rtype_instruction: AND $@5 • rtype_params

    REGISTER  shift, and go to state 55

    rtype_params  go to state 61


State 36

   32 itype_instruction: ANDI $@10 • itype_params

    REGISTER  shift, and go to state 57

    itype_params  go to state 62


State 37

   23 rtype_instruction: OR $@6 • rtype_params

    REGISTER  shift, and go to state 55

    rtype_params  go to state 63


State 38

   34 itype_instruction: ORI $@11 • itype_params

    REGISTER  shift, and go to state 57

    itype_params  go to state 64


State 39

   47 stype_instruction: SLL $@16 • itype_params

    REGISTER  shift, and go to state 57

    itype_params  go to state 65


State 40

   49 stype_instruction: SRL $@17 • itype_params

    REGISTER  shift, and go to state 57

    itype_params  go to state 66


State 41

   25 rtype_instruction: NOR $@7 • rtype_params

    REGISTER  shift, and go to state 55

    rtype_params  go to state 67


State 42

   42 itype_instruction: SW $@15 • memory_params

    REGISTER  shift, and go to state 68

    memory_params  go to state 69


State 43

   40 itype_instruction: LW $@14 • memory_params

    REGISTER  shift, and go to state 68

    memory_params  go to state 70


State 44

   36 itype_instruction: BEQ $@12 • branch_params

    REGISTER  shift, and go to state 71

    branch_params  go to state 72


State 45

   38 itype_instruction: BNEQ $@13 • branch_params

    REGISTER  shift, and go to state 71

    branch_params  go to state 73


State 46

   51 jtype_instruction: J $@18 • LABEL

    LABEL  shift, and go to state 74


State 47

    9 labels: LABEL $@2 • COLON

    COLON  shift, and go to state 75


State 48

   52 push_instruction: PUSH REGISTER •

    $default  reduce using rule 52 (push_instruction)


State 49

   53 push_instruction: PUSH INT • LPAREN REGISTER RPAREN

    LPAREN  shift, and go to state 76


State 50

   54 pop_instruction: POP REGISTER •

    $default  reduce using rule 54 (pop_instruction)


State 51

    0 $accept: start $end •

    $default  accept


State 52

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 53

    7 labels: labels LABEL • $@1 COLON

    $default  reduce using rule 6 ($@1)

    $@1  go to state 77


State 54

    5 unit: labels instruction •

    $default  reduce using rule 5 (unit)


State 55

   26 rtype_params: REGISTER • COMMA REGISTER COMMA REGISTER

    COMMA  shift, and go to state 78


State 56

   17 rtype_instruction: ADD $@3 rtype_params •

    $default  reduce using rule 17 (rtype_instruction)


State 57

   43 itype_params: REGISTER • COMMA REGISTER COMMA INT

    COMMA  shift, and go to state 79


State 58

   28 itype_instruction: ADDI $@8 itype_params •

    $default  reduce using rule 28 (itype_instruction)


State 59

   19 rtype_instruction: SUB $@4 rtype_params •

    $default  reduce using rule 19 (rtype_instruction)


State 60

   30 itype_instruction: SUBI $@9 itype_params •

    $default  reduce using rule 30 (itype_instruction)


State 61

   21 rtype_instruction: AND $@5 rtype_params •

    $default  reduce using rule 21 (rtype_instruction)


State 62

   32 itype_instruction: ANDI $@10 itype_params •

    $default  reduce using rule 32 (itype_instruction)


State 63

   23 rtype_instruction: OR $@6 rtype_params •

    $default  reduce using rule 23 (rtype_instruction)


State 64

   34 itype_instruction: ORI $@11 itype_params •

    $default  reduce using rule 34 (itype_instruction)


State 65

   47 stype_instruction: SLL $@16 itype_params •

    $default  reduce using rule 47 (stype_instruction)


State 66

   49 stype_instruction: SRL $@17 itype_params •

    $default  reduce using rule 49 (stype_instruction)


State 67

   25 rtype_instruction: NOR $@7 rtype_params •

    $default  reduce using rule 25 (rtype_instruction)


State 68

   45 memory_params: REGISTER • COMMA INT LPAREN REGISTER RPAREN

    COMMA  shift, and go to state 80


State 69

   42 itype_instruction: SW $@15 memory_params •

    $default  reduce using rule 42 (itype_instruction)


State 70

   40 itype_instruction: LW $@14 memory_params •

    $default  reduce using rule 40 (itype_instruction)


State 71

   44 branch_params: REGISTER • COMMA REGISTER COMMA LABEL

    COMMA  shift, and go to state 81


State 72

   36 itype_instruction: BEQ $@12 branch_params •

    $default  reduce using rule 36 (itype_instruction)


State 73

   38 itype_instruction: BNEQ $@13 branch_params •

    $default  reduce using rule 38 (itype_instruction)


State 74

   51 jtype_instruction: J $@18 LABEL •

    $default  reduce using rule 51 (jtype_instruction)


State 75

    9 labels: LABEL $@2 COLON •

    $default  reduce using rule 9 (labels)


State 76

   53 push_instruction: PUSH INT LPAREN • REGISTER RPAREN

    REGISTER  shift, and go to state 82


State 77

    7 labels: labels LABEL $@1 • COLON

    COLON  shift, and go to state 83


State 78

   26 rtype_params: REGISTER COMMA • REGISTER COMMA REGISTER

    REGISTER  shift, and go to state 84


State 79

   43 itype_params: REGISTER COMMA • REGISTER COMMA INT

    REGISTER  shift, and go to state 85


State 80

   45 memory_params: REGISTER COMMA • INT LPAREN REGISTER RPAREN

    INT  shift, and go to state 86


State 81

   44 branch_params: REGISTER COMMA • REGISTER COMMA LABEL

    REGISTER  shift, and go to state 87


State 82

   53 push_instruction: PUSH INT LPAREN REGISTER • RPAREN

    RPAREN  shift, and go to state 88


State 83

    7 labels: labels LABEL $@1 COLON •

    $default  reduce using rule 7 (labels)


State 84

   26 rtype_params: REGISTER COMMA REGISTER • COMMA REGISTER

    COMMA  shift, and go to state 89


State 85

   43 itype_params: REGISTER COMMA REGISTER • COMMA INT

    COMMA  shift, and go to state 90


State 86

   45 memory_params: REGISTER COMMA INT • LPAREN REGISTER RPAREN

    LPAREN  shift, and go to state 91


State 87

   44 branch_params: REGISTER COMMA REGISTER • COMMA LABEL

    COMMA  shift, and go to state 92


State 88

   53 push_instruction: PUSH INT LPAREN REGISTER RPAREN •

    $default  reduce using rule 53 (push_instruction)


State 89

   26 rtype_params: REGISTER COMMA REGISTER COMMA • REGISTER

    REGISTER  shift, and go to state 93


State 90

   43 itype_params: REGISTER COMMA REGISTER COMMA • INT

    INT  shift, and go to state 94


State 91

   45 memory_params: REGISTER COMMA INT LPAREN • REGISTER RPAREN

    REGISTER  shift, and go to state 95


State 92

   44 branch_params: REGISTER COMMA REGISTER COMMA • LABEL

    LABEL  shift, and go to state 96


State 93

   26 rtype_params: REGISTER COMMA REGISTER COMMA REGISTER •

    $default  reduce using rule 26 (rtype_params)


State 94

   43 itype_params: REGISTER COMMA REGISTER COMMA INT •

    $default  reduce using rule 43 (itype_params)


State 95

   45 memory_params: REGISTER COMMA INT LPAREN REGISTER • RPAREN

    RPAREN  shift, and go to state 97


State 96

   44 branch_params: REGISTER COMMA REGISTER COMMA LABEL •

    $default  reduce using rule 44 (branch_params)


State 97

   45 memory_params: REGISTER COMMA INT LPAREN REGISTER RPAREN •

    $default  reduce using rule 45 (memory_params)
